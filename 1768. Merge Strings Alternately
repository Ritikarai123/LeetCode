//using string with more time complexity
class Solution {
    public String mergeAlternately(String word1, String word2) {
        String s="";
       int i=0;
       
       if(word1.length()<=word2.length()){
        for(i=0;i<word1.length();i++) 
            s=s+word1.charAt(i)+word2.charAt(i);
         for(int j=i;j<word2.length();j++)
        s=s+word2.charAt(j);    
        }
      if(word1.length()>word2.length()){
        for(i=0;i<word2.length();i++) 
            s=s+word1.charAt(i)+word2.charAt(i);
         for(int j=i;j<word1.length();j++)
        s=s+word1.charAt(j); 
      }
        return s;
    }
}

//using Stringbuffer with less time complexity
 StringBuffer s=new StringBuffer();
    int i=0,j=0;
    while(i!=word1.length() || j!=word2.length()){
        if(i!=word1.length())
        s=s.append(word1.charAt(i++));
        if(j!=word2.length())
        s=s.append(word2.charAt(j++));

    }
    return s.toString();
        }
